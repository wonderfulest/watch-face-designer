{
  "version": "1.0",
  "rules": {
    "naming": {
      "components": {
        "pattern": "^[A-Z][a-zA-Z]*\\.vue$",
        "message": "Component files should use PascalCase and end with .vue"
      },
      "stores": {
        "pattern": "^[a-z][a-zA-Z]*\\.js$",
        "message": "Store files should use camelCase and end with .js"
      },
      "variables": {
        "pattern": "^[a-z][a-zA-Z0-9]*$",
        "message": "Variables should use camelCase"
      },
      "constants": {
        "pattern": "^[A-Z][A-Z0-9_]*$",
        "message": "Constants should use UPPER_SNAKE_CASE"
      }
    },
    "imports": {
      "order": [
        "vue",
        "pinia",
        "element-plus",
        "@/components",
        "@/stores",
        "@/utils",
        "@/config",
        "./"
      ],
      "message": "Imports should be ordered by source"
    },
    "components": {
      "script-setup": {
        "required": true,
        "message": "Components should use <script setup> syntax"
      },
      "props": {
        "type-required": true,
        "message": "Props should have type definitions"
      },
      "emits": {
        "required": true,
        "message": "Components should define their emits"
      }
    },
    "stores": {
      "state": {
        "type-required": true,
        "message": "Store state properties should have type definitions"
      },
      "actions": {
        "async-required": true,
        "message": "Store actions should be async when performing async operations"
      }
    },
    "styles": {
      "scoped": {
        "required": true,
        "message": "Component styles should be scoped"
      },
      "variables": {
        "pattern": "^--el-",
        "message": "CSS variables should use Element Plus naming convention"
      }
    },
    "events": {
      "naming": {
        "pattern": "^[a-z][a-zA-Z]*$",
        "message": "Event names should use camelCase"
      },
      "emits": {
        "required": true,
        "message": "Events should be properly emitted using defineEmits"
      }
    },
    "properties": {
      "types": [
        "color",
        "goal",
        "data",
        "number",
        "string",
        "boolean",
        "date",
        "select"
      ],
      "message": "Property types should be one of the allowed values"
    },
    "validation": {
      "required": {
        "message": "Required fields should have validation rules"
      },
      "error-messages": {
        "required": true,
        "message": "Validation should include error messages"
      }
    },
    "accessibility": {
      "labels": {
        "required": true,
        "message": "Form controls should have associated labels"
      },
      "aria": {
        "required": true,
        "message": "Interactive elements should have appropriate ARIA attributes"
      }
    },
    "performance": {
      "v-for": {
        "key-required": true,
        "message": "v-for directives should have a key"
      },
      "computed": {
        "cache-required": true,
        "message": "Computed properties should be used for expensive calculations"
      }
    }
  }
} 